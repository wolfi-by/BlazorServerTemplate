@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="customTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<CascadingValue Value="customTheme">
    <MudLayout>
        <MudAppBar Elevation="1">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                           OnClick="@((e) => DrawerToggle())" />
            <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
            <MudSpacer />

            <MudSwitch @bind-Value="_themeEditor" Color="Color.Secondary" Class="ma-4" T="bool"
                       Label="Theme Editor" />
            <MudSwitch @bind-Value="_isDarkMode" Color="Color.Secondary" Class="ma-4" T="bool"
                       Label="Toggle Light/Dark Mode" />
            <CultureSelector />


        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" Anchor="Anchor.Left" Overlay="false" Elevation="0" Variant="@DrawerVariant.Responsive" ClipMode="DrawerClipMode.Never">
            <NavMenu />
        </MudDrawer>

        <MudDrawer @bind-Open="_themeEditor" Anchor="Anchor.Right" Overlay="false" Elevation="0" Variant="@DrawerVariant.Responsive" ClipMode="DrawerClipMode.Never">
            <ThemeEditor @bind-Theme="customTheme" />
            </MudDrawer>
       
        <MudMainContent Class="mt-16 pa-4">
            
            
                @Body
           

        </MudMainContent>
    </MudLayout>
</CascadingValue>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
@code {
    private bool _drawerOpen = true;
    private bool _themeEditor;
    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider = default!;

    private MudTheme customTheme = new MudTheme();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);




            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }



}

@using System.Globalization
@using Microsoft.Extensions.Options
@using PSC.Blazor.Components.Icons
@inject ILocalizationInterceptor loc

@inject NavigationManager Nav
@inject IOptions<RequestLocalizationOptions> RequestLocalizationOptions

    <MudPaper Style="background-color:transparent;">
            <MudSelect @bind-Value="Culture" onselect="SelectionChanged" Variant="Variant.Outlined"  Dense="true" Placeholder="Placeholder">
            @foreach (var culture in supportedCultures)
            {
                <MudSelectItem Value="@culture">
                    <MudStack Row="true">
                        <SVGFlag CountryCode="@culture.Name.Split("-").Last()" FlagType="FlagType.Wide" Width="20" Height="15" />
                       @*  <p>@culture.DisplayName</p> *@
                    </MudStack>
                </MudSelectItem>
            }
        </MudSelect>
</MudPaper>

@code
{
    private CultureInfo[] supportedCultures = new[]
    {
        new CultureInfo("en-US"),
        new CultureInfo("de-DE"),
    };

    private CultureInfo? selectedCulture;

    protected override void OnInitialized()
    {
        if (RequestLocalizationOptions != null && RequestLocalizationOptions.Value != null)
        {
            var aaa = RequestLocalizationOptions.Value.SupportedCultures?.ToArray();

        }
        selectedCulture = CultureInfo.CurrentCulture;
    }

    private CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set
        {
            if (CultureInfo.CurrentCulture != value)
            {
                var uri = new Uri(Nav.Uri)
                .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
                var cultureEscaped = Uri.EscapeDataString(value.Name);
                var uriEscaped = Uri.EscapeDataString(uri);




                Nav.NavigateTo(
                $"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}",
                forceLoad: true);


            }
        }
    }
}